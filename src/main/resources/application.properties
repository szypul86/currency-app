
spring.jpa.database=POSTGRESQL

spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.security.oauth2.client.registration.google.client-id=403614562991-i7qg2p5krp7c2n3dn4sat3s3e1h88arc.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=oMCuMbPUUzntSJapvovdH1O4
spring.security.oauth2.client.registration.google.scope: email, profile

spring.security.oauth2.client.registration.facebook.client-id=320094402324076
spring.security.oauth2.client.registration.facebook.client-secret=dc439862e5b8524954880b4234b35946
spring.security.oauth2.client.registration.facebook.scope:  email, public_profile

spring.security.oauth2.client.provider.facebook.authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

oauth.gmail.client-id=403614562991-i7qg2p5krp7c2n3dn4sat3s3e1h88arc.apps.googleusercontent.com
oauth.gmail.client-secret=oMCuMbPUUzntSJapvovdH1O4
oauth.gmail.refresh-token=1//0cDPdqZnX29z-CgYIARAAGAwSNwF-L9IrKTep6PfLd10tNcFz9AbOHpque3dMEJXvY8K98K3h0dKZ31HcFfbSXXmL97D0vbmYVoo
oauth.gmail.token-url=https://accounts.google.com/o/oauth2/token

mail.smtp.ssl.enable=true
mail.smtp.sasl.enable=true
mail.smtp.sasl.mechanisms=XOAUTH2
mail.smtp.auth.login.disable=true
mail.smtp.auth.plain.disable=true
mail.smtp.mail-from=marinemasteras@gmail.com


app.auth.tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec: 864000000
# app.oauth2:
# After successfully authenticating with the OAuth2 Provider,
# we'll be generating an auth token for the user and sending the token to the
# redirectUri mentioned by the frontend client in the /oauth2/authorize request.
# We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris:http://localhost:3000/oauth2/redirect